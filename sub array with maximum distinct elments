#include <iostream>
#include <vector>
using namespace std;

int numSubarrayProductLessThanK(vector<int>& nums, int k) {
    if (k <= 1) return 0;  // Edge case: No subarrays possible
    
    int left = 0, product = 1, count = 0;

    for (int right = 0; right < nums.size(); right++) {
        product *= nums[right];  // Multiply current element

        // Shrink window if product >= k
        while (product >= k && left <= right) {
            product /= nums[left];  
            left++;
        }

        // Number of new subarrays ending at `right`
        count += (right - left + 1);
    }

    return count;
}

int main() {
    vector<int> nums = {10, 5, 2, 6};
    int k = 100;
    cout << "Number of subarrays: " << numSubarrayProductLessThanK(nums, k) << endl;
    return 0;
}
